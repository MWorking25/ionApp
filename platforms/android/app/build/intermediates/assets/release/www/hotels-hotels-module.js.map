{"version":3,"sources":["webpack:///./src/app/hotels/facilities/facilities.component.html","webpack:///./src/app/hotels/facilities/facilities.component.scss","webpack:///./src/app/hotels/facilities/facilities.component.ts","webpack:///./src/app/hotels/hotels.module.ts","webpack:///./src/app/hotels/hotels.page.html","webpack:///./src/app/hotels/hotels.page.ts"],"names":[],"mappings":"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","file":"hotels-hotels-module.js","sourcesContent":["module.exports = \"\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button defaultHref=\\\"home/tabs/hotels/description/{{fieldid}}\\\"\\r\\n      ></ion-back-button>\\r\\n    </ion-buttons>\\r\\n \\r\\n\\r\\n\\r\\n<ion-content padding>\\r\\n  <ion-grid>\\r\\n    <ion-row>\\r\\n      <ion-col text-center>\\r\\n        ID : {{modelId}}\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col text-center>\\r\\n        <ion-button (click)=\\\"closeModal()\\\">Close Modal</ion-button>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvdGVscy9mYWNpbGl0aWVzL2ZhY2lsaXRpZXMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute,Router } from \"@angular/router\";\r\n@Component({\r\n  selector: 'app-facilities',\r\n  templateUrl: './facilities.component.html',\r\n  styleUrls: ['./facilities.component.scss'],\r\n})\r\nexport class FacilitiesComponent implements OnInit {\r\n\r\n  fieldid;\r\n\r\n  constructor(private route: ActivatedRoute, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.route.paramMap.subscribe(params => {\r\n      this.fieldid = params.get(\"id\");\r\n    })\r\n  }\r\n\r\n  \r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HttpClientModule} from '@angular/common/http';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { FacilitiesComponent } from './facilities/facilities.component';\r\nimport { HotelsPage } from './hotels.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HotelsPage\r\n  },\r\n  {\r\n    path:'description/:id',\r\n    loadChildren:'./full-details/full-details.module#FullDetailsPageModule'\r\n  },\r\n  {\r\n    path: 'description/:id/facilities',\r\n    component: FacilitiesComponent\r\n  }\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [ \r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    HttpClientModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [HotelsPage, FacilitiesComponent]\r\n})\r\nexport class HotelsPageModule {}\r\n","module.exports = \"<ion-header >\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-title>Application</ion-title>\\r\\n   \\r\\n        <ion-avatar slot=\\\"end\\\" style=\\\"height:40px;width:40px;\\\">\\r\\n          <img src=\\\"https://www.w3schools.com/w3images/avatar2.png\\\">\\r\\n        </ion-avatar>\\r\\n      \\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-toolbar>\\r\\n  <ion-grid>\\r\\n    <ion-row>\\r\\n      <ion-col size=\\\"10\\\">\\r\\n          <ion-searchbar></ion-searchbar>\\r\\n      </ion-col>\\r\\n      <ion-col size=\\\"2\\\">\\r\\n          <ion-button fill=\\\"outline\\\" class=\\\"mt-2\\\"  color=\\\"medium\\\">\\r\\n              <ion-icon name=\\\"options\\\"></ion-icon>\\r\\n          </ion-button>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n  \\r\\n</ion-toolbar>\\r\\n<ion-content>\\r\\n    <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"doRefresh($event)\\\">\\r\\n        <ion-refresher-content\\r\\n          pullingIcon=\\\"arrow-dropdown\\\"\\r\\n          pullingText=\\\"Pull to refresh\\\"\\r\\n          refreshingSpinner=\\\"circles\\\"\\r\\n          refreshingText=\\\"Refreshing...\\\">\\r\\n        </ion-refresher-content>\\r\\n      </ion-refresher>\\r\\n\\r\\n   \\r\\n      <ion-slides #mySlider (ionSlidesDidLoad)=\\\"slidesDidLoad(mySlider)\\\" pager=\\\"true\\\" [options]=\\\"slideOpts\\\">\\r\\n          <ion-slide>\\r\\n          <img class=\\\"slider-image\\\" src=\\\"../../assets/images/misc/3.jpg\\\">\\r\\n          </ion-slide>\\r\\n          <ion-slide>\\r\\n          <img class=\\\"slider-image\\\"  src=\\\"../../assets/images/misc/3.jpg\\\">\\r\\n          </ion-slide>\\r\\n          <ion-slide>\\r\\n          <img class=\\\"slider-image\\\"  src=\\\"../../assets/images/misc/3.jpg\\\">\\r\\n          </ion-slide>\\r\\n          </ion-slides>\\r\\n\\r\\n              \\r\\n\\r\\n          <ion-grid>\\r\\n            <ion-row>\\r\\n              <ion-col size=\\\"12\\\">\\r\\n                  <ion-card *ngFor=\\\"let obj of items;let i = index;\\\"(click)=\\\"redirectionToUrl('/description', i)\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <img src=\\\"../../assets/images/misc/3.jpg\\\" class=\\\"img-fluid img-thumbnail\\\" style=\\\"min-height:150px;max-height:150px;width: 100%;max-width: 100%;min-width: 100%;\\\">\\r\\n                        </div>\\r\\n                        \\r\\n                      <ion-item>\\r\\n                        <ion-label>{{obj.name}}</ion-label>\\r\\n                        <ion-label slot=\\\"end\\\" class=\\\"text-right\\\"><span *ngFor=\\\"let stars of [1,2,3,4,5]\\\"><i class=\\\"fa fa-star\\\" *ngIf=\\\"stars <= 3\\\" style=\\\"color:goldenrod\\\" aria-hidden=\\\"true\\\"></i><i class=\\\"fa fa-star-o\\\" *ngIf=\\\"stars > 3\\\" aria-hidden=\\\"true\\\"></i></span></ion-label>\\r\\n                      </ion-item>\\r\\n                     \\r\\n                      <ion-card-content>\\r\\n                          <ion-fab horizontal=\\\"end\\\" slot=\\\"fixed\\\" style=\\\"margin-top: -97px\\\">\\r\\n                              <ion-fab-button color=\\\"light\\\" size=\\\"small\\\" >\\r\\n                                  <ion-icon *ngIf=\\\"i % 2 == 1\\\" name=\\\"heart\\\" style=\\\"color:rgb(250, 48, 48)\\\"></ion-icon>\\r\\n                                  <ion-icon *ngIf=\\\"i % 2 == 0\\\" name=\\\"heart-empty\\\"></ion-icon>\\r\\n                              </ion-fab-button>\\r\\n                            </ion-fab>\\r\\n                       {{obj.address}}, {{obj.state}}\\r\\n                      </ion-card-content>\\r\\n                      <ion-card-content>\\r\\n                        <ion-grid>\\r\\n                          <ion-row>\\r\\n                            <ion-col size=\\\"6\\\">\\r\\n                                <ion-text color=\\\"dark\\\">\\r\\n                                    <h5>Included in this price</h5>\\r\\n                                    <ul>\\r\\n                                      <li>Breackfast</li>\\r\\n                                      <li>WIFI</li>\\r\\n                                      <li>Swimming</li>\\r\\n                                    </ul>\\r\\n                                  </ion-text>\\r\\n                            </ion-col>\\r\\n                            <ion-col size=\\\"6\\\" style=\\\"text-align: right\\\">\\r\\n                                <ion-button fill=\\\"outline\\\">{{2500 * (i+10) | currency:\\\"₹\\\" }}</ion-button>\\r\\n                                <ion-button fill=\\\"outline\\\" color=\\\"danger\\\" style=\\\"text-decoration: line-through;\\\">{{2500 * (i+13) | currency:\\\"₹\\\" }}</ion-button>\\r\\n                            \\r\\n                            </ion-col>\\r\\n                          </ion-row>\\r\\n                        </ion-grid>\\r\\n                         \\r\\n                      </ion-card-content>\\r\\n                        <ion-card-header>\\r\\n                          {{ 30 * (i +12.5)}} reviews for this.\\r\\n                        </ion-card-header>\\r\\n                    </ion-card>\\r\\n              </ion-col>\\r\\n            </ion-row>\\r\\n          </ion-grid>\\r\\n          \\r\\n\\r\\n\\r\\n          \\r\\n\\r\\n              <!-- <ion-card *ngFor=\\\"let obj of items\\\">\\r\\n\\r\\n                  <ion-item>\\r\\n                    <ion-avatar item-start>\\r\\n                      <img src=\\\"../../assets/images/misc/3.jpg\\\">\\r\\n                    </ion-avatar>\\r\\n                    <h2 text-capitalize>\\r\\n                      {{obj.name}}\\r\\n                      <ion-badge>\\r\\n                        <ion-icon name=\\\"checkmark-circle\\\"></ion-icon>\\r\\n                      </ion-badge>\\r\\n                    </h2>\\r\\n                    <p text-capitalize>\\r\\n                      {{obj.phone}}\\r\\n                    </p>\\r\\n                \\r\\n                    <button ion-button item-end clear>\\r\\n                      <ion-icon name=\\\"add-circle\\\"></ion-icon>\\r\\n                    </button>\\r\\n                \\r\\n                    <button ion-button item-end clear>\\r\\n                      <ion-icon name=\\\"trash\\\"></ion-icon>\\r\\n                    </button>\\r\\n                \\r\\n                    <button ion-button item-end clear>\\r\\n                      <ion-icon name=\\\"create\\\"></ion-icon>\\r\\n                    </button>\\r\\n                \\r\\n                  </ion-item>\\r\\n                \\r\\n                  <ion-card-content>\\r\\n                    <p>{{obj.address}} {{obj.address2}}</p>\\r\\n                  </ion-card-content>\\r\\n                \\r\\n                  <ion-row>\\r\\n                    <ion-col text-left>\\r\\n                      <button ion-button icon-start clear small (click)=\\\"like(obj, $event)\\\">\\r\\n                        <ion-icon name=\\\"happy\\\"></ion-icon>\\r\\n                        <div>{{obj.like}}</div>\\r\\n                      </button>\\r\\n                    </ion-col>\\r\\n                \\r\\n                    <ion-col text-center>\\r\\n                      <button ion-button icon-start clear small>\\r\\n                        <ion-icon name=\\\"add\\\"></ion-icon>\\r\\n                        <div>Ver más.</div>\\r\\n                      </button>\\r\\n                    </ion-col>\\r\\n                \\r\\n                    <ion-col text-right>\\r\\n                      <button ion-button clear small>\\r\\n                        <ion-icon name=\\\"paper-plane\\\"></ion-icon>\\r\\n                      </button>\\r\\n                    </ion-col>\\r\\n                  </ion-row>\\r\\n                \\r\\n                </ion-card> -->\\r\\n\\r\\n\\r\\n\\r\\n</ion-content>\\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { IonSlides } from '@ionic/angular';\nimport { Router } from '@angular/router';\nimport { HotelsService } from './hotels.service';\nimport { Observable } from 'rxjs/Observable';\n@Component({\n  selector: 'app-hotels',\n  templateUrl: './hotels.page.html',\n  styleUrls: ['./hotels.page.scss'],\n})\nexport class HotelsPage implements OnInit {\n  cardSettings: any = {\n    theme: 'ios'\n}\n\n  items;\n \n\n  constructor(private router: Router, private _hotelService : HotelsService) { }\n\n  ngOnInit() {\n    this.getItemsList();\n  }\n\n\n  getItemsList() {\n    this._hotelService.getItemsList().subscribe((res:any)=>{\n      this.items = res;\n    });\t\n  }\n\n  slideOpts= {\n    loop: true, // have to add loop = true, otherwise when reach to last slide if will all the way back to first, not just smooth slide to first\n    };\n    slidesDidLoad(slides:IonSlides) {\n    slides.startAutoplay();\n    }\n\n  doRefresh(event) {\n    console.log('Begin async operation');\n\n    setTimeout(() => {\n      console.log('Async operation has ended');\n      event.target.complete();\n    }, 600);\n  }\n\n  redirectionToUrl(path, fieldid)\n  {\n    this.router.navigate([path,fieldid])\n  } \n \n\n}\n"],"sourceRoot":""}